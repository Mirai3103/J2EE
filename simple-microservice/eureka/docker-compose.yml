version: '3.8'
services:
  service-registry:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8761:8761"
    networks:
      - my-network

  api-gateway:
    build:
      context: ../gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - service-registry
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
    networks:
      - my-network

  book-service1:
    build:
      context: ../book-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    depends_on:
      - service-registry
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8081
      - INSTANCE_ID=1
    networks:
      - my-network

  author-service:
    build:
      context: ../author-service
      dockerfile: Dockerfile
    ports:
      - "8083:8083"
    depends_on:
      - service-registry
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8083
      - INSTANCE_ID=3
    networks:
      - my-network

  book-service2:
    build:
      context: ../book-service
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - service-registry
    environment:
      - EUREKA_CLIENT_SERVICEURL_DEFAULTZONE=http://service-registry:8761/eureka/
      - SERVER_PORT=8082
      - INSTANCE_ID=2
    networks:
      - my-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - my-network

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENERS: PLAINTEXT://kafka:29092,OUTSIDE://0.0.0.0:9092
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,OUTSIDE://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - my-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    depends_on:
      - kafka
    ports:
      - "8090:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - my-network

networks:
  my-network:
    driver: bridge